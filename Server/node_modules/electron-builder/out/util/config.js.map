{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/util/config.ts"],"names":[],"mappings":"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","sourcesContent":["import Ajv from \"ajv\"\nimport { CancellationToken } from \"electron-builder-http\"\nimport { asArray, debug, log, warn } from \"electron-builder-util\"\nimport { deepAssign } from \"electron-builder-util/out/deepAssign\"\nimport { statOrNull } from \"electron-builder-util/out/fs\"\nimport { httpExecutor } from \"electron-builder-util/out/nodeHttpExecutor\"\nimport { orNullIfFileNotExist } from \"electron-builder-util/out/promise\"\nimport { readJson } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { findAndReadConfig, readConfig } from \"read-config-file\"\nimport { Config } from \"../metadata\"\nimport { reactCra } from \"../presets/rectCra\"\nimport AdditionalPropertiesParams = ajv.AdditionalPropertiesParams\nimport ErrorObject = ajv.ErrorObject\nimport TypeParams = ajv.TypeParams\n\nfunction getConfigFromPackageData(metadata: any | null) {\n  return metadata == null ? null : metadata.build\n}\n\nasync function loadConfig(projectDir: string, packageMetadata?: any): Promise<Config | null> {\n  const data = getConfigFromPackageData(packageMetadata || (await orNullIfFileNotExist(readJson(path.join(projectDir, \"package.json\")))))\n  return data == null ? findAndReadConfig<Config>(projectDir, \"electron-builder\", log) : data\n}\n\n/** @internal */\nexport async function getConfig(projectDir: string, configPath: string | null, packageMetadata: any | null, configFromOptions: Config | null | undefined): Promise<Config> {\n  let fileOrPackageConfig\n  if (configPath == null) {\n    fileOrPackageConfig = await loadConfig(projectDir, packageMetadata)\n  }\n  else {\n    fileOrPackageConfig = await readConfig<Config>(path.resolve(projectDir, configPath), projectDir, log)\n  }\n\n  const config: Config = deepAssign(fileOrPackageConfig == null ? Object.create(null) : fileOrPackageConfig, configFromOptions)\n\n  let extendsSpec = config.extends\n  if (extendsSpec == null && extendsSpec !== null && packageMetadata != null) {\n    const devDependencies = packageMetadata.devDependencies\n    if (devDependencies != null) {\n      if (\"react-scripts\" in devDependencies) {\n        extendsSpec = \"react-cra\"\n        config.extends = extendsSpec\n      }\n      else if (\"electron-webpack\" in devDependencies) {\n        extendsSpec = \"electron-webpack/electron-builder.yml\"\n        config.extends = extendsSpec\n      }\n    }\n  }\n\n  if (extendsSpec == null) {\n    return config\n  }\n\n  let parentConfig: Config | null\n  if (extendsSpec === \"react-cra\") {\n    parentConfig = await reactCra(projectDir)\n  }\n  else {\n    let spec = extendsSpec\n    let isFileSpec: boolean | undefined\n    if (spec.startsWith(\"file:\")) {\n      spec = spec.substring(\"file:\".length)\n      isFileSpec = true\n    }\n\n    parentConfig = await orNullIfFileNotExist(readConfig(path.resolve(projectDir, spec), projectDir, log))\n    if (parentConfig == null && isFileSpec !== true) {\n      let resolved: string | null = null\n      try {\n        resolved = require.resolve(spec)\n      }\n      catch (e) {\n        // ignore\n      }\n\n      if (resolved != null) {\n        parentConfig = await readConfig(resolved, projectDir, log)\n      }\n    }\n\n    if (parentConfig == null) {\n      throw new Error(`Cannot find parent config file: ${spec}`)\n    }\n  }\n\n  // electron-webpack and electrify client config - want to exclude some files\n  // we add client files configuration to main parent file matcher\n  if (parentConfig.files != null && config.files != null && (Array.isArray(config.files) || typeof config.files === \"string\") && Array.isArray(parentConfig.files) && parentConfig.files.length > 0) {\n    const mainFileSet = parentConfig.files[0]\n    if (typeof mainFileSet === \"object\" && (mainFileSet.from == null || mainFileSet.from === \".\")) {\n      mainFileSet.filter = asArray(mainFileSet.filter)\n      mainFileSet.filter.push(...asArray(config.files as any))\n      delete (config as any).files\n    }\n  }\n\n  return deepAssign(parentConfig, config)\n}\n\n/** @internal */\nexport async function getElectronVersion(projectDir: string, config?: Config, projectMetadata?: any | null): Promise<string> {\n  if (config == null) {\n    config = await getConfig(projectDir, null, null, null)\n  }\n  if (config.electronVersion != null) {\n    return config.electronVersion\n  }\n  return await computeElectronVersion(projectDir, projectMetadata)\n}\n\n/** @internal */\nexport async function computeElectronVersion(projectDir: string, projectMetadata?: any | null): Promise<string> {\n  // projectMetadata passed only for prepacked app asar and in this case no dev deps in the app.asar\n  if (projectMetadata == null) {\n    for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n      try {\n        return (await readJson(path.join(projectDir, \"node_modules\", name, \"package.json\"))).version\n      }\n      catch (e) {\n        if (e.code !== \"ENOENT\") {\n          warn(`Cannot read electron version from ${name} package.json: ${e.message}`)\n        }\n      }\n    }\n  }\n\n  const packageJsonPath = path.join(projectDir, \"package.json\")\n  const electronPrebuiltDep = findFromElectronPrebuilt(projectMetadata || await readJson(packageJsonPath))\n  if (electronPrebuiltDep == null || electronPrebuiltDep === \"latest\") {\n    try {\n      const releaseInfo = await httpExecutor.request<any>({\n        hostname: \"github.com\",\n        path: \"/electron/electron/releases/latest\",\n        headers: {\n          Accept: \"application/json\",\n        },\n      }, new CancellationToken())\n      return (releaseInfo.tag_name.startsWith(\"v\")) ? releaseInfo.tag_name.substring(1) : releaseInfo.tag_name\n    }\n    catch (e) {\n      warn(e)\n    }\n\n    throw new Error(`Cannot find electron dependency to get electron version in the '${packageJsonPath}'`)\n  }\n\n  const firstChar = electronPrebuiltDep[0]\n  return firstChar === \"^\" || firstChar === \"~\" ? electronPrebuiltDep.substring(1) : electronPrebuiltDep\n}\n\nfunction findFromElectronPrebuilt(packageData: any): any {\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n    const devDependencies = packageData.devDependencies\n    let dep = devDependencies == null ? null : devDependencies[name]\n    if (dep == null) {\n      const dependencies = packageData.dependencies\n      dep = dependencies == null ? null : dependencies[name]\n    }\n    if (dep != null) {\n      return dep\n    }\n  }\n  return null\n}\n\nlet validatorPromise: Promise<any> | null = null\n\nasync function createConfigValidator() {\n  const ajv = new Ajv({allErrors: true, coerceTypes: true})\n  ajv.addMetaSchema(require(\"ajv/lib/refs/json-schema-draft-04.json\"))\n  require(\"ajv-keywords\")(ajv, [\"typeof\"])\n  const schema = await readJson(path.join(__dirname, \"..\", \"..\", \"scheme.json\"))\n  return ajv.compile(schema)\n}\n\n/** @internal */\nexport async function validateConfig(config: Config) {\n  const extraMetadata = config.extraMetadata\n  if (extraMetadata != null) {\n    if (extraMetadata.build != null) {\n      throw new Error(`--em.build is deprecated, please specify as -c\"`)\n    }\n    if (extraMetadata.directories != null) {\n      throw new Error(`--em.directories is deprecated, please specify as -c.directories\"`)\n    }\n  }\n\n  // noinspection JSDeprecatedSymbols\n  if (config.npmSkipBuildFromSource === false) {\n    config.buildDependenciesFromSource = false\n  }\n\n  if (validatorPromise == null) {\n    validatorPromise = createConfigValidator()\n  }\n\n  const validator = await validatorPromise\n  if (!validator(config)) {\n    debug(JSON.stringify(validator.errors, null, 2))\n    throw new Error(`Config is invalid:\n${JSON.stringify(normaliseErrorMessages(validator.errors!), null, 2)}\n\nHow to fix:\n  1. Open https://github.com/electron-userland/electron-builder/wiki/Options\n  2. Search the option name on the page.\n    * Not found? The option was deprecated or not exists (check spelling).\n    * Found? Check that the option in the appropriate place. e.g. \"title\" only in the \"dmg\", not in the root.\n`)\n  }\n}\n\nfunction normaliseErrorMessages(errors: Array<ErrorObject>) {\n  const result: any = Object.create(null)\n  for (const e of errors) {\n    if (e.keyword === \"type\" && (e.params as TypeParams).type === \"null\") {\n      // ignore - no sense to report that type accepts null\n      continue\n    }\n\n    const dataPath = e.dataPath.length === 0 ? [] : e.dataPath.substring(1).split(\".\")\n    if (e.keyword === \"additionalProperties\") {\n      dataPath.push((e.params as AdditionalPropertiesParams).additionalProperty)\n    }\n\n    let o = result\n    let lastName: string | null = null\n    for (const p of dataPath) {\n      if (p === dataPath[dataPath.length - 1]) {\n        lastName = p\n        break\n      }\n      else {\n        if (o[p] == null) {\n          o[p] = Object.create(null)\n        }\n        else if (typeof o[p] === \"string\") {\n          o[p] = [o[p]]\n        }\n        o = o[p]\n      }\n    }\n\n    if (lastName == null) {\n      lastName = \"unknown\"\n    }\n\n    let message = e.message!.toUpperCase()[0] + e.message!.substring(1)\n    switch (e.keyword) {\n      case \"additionalProperties\":\n        message = \"Unknown option\"\n        break\n\n      case \"required\":\n        message = \"Required option\"\n        break\n\n      case \"anyOf\":\n        message = \"Invalid option object\"\n        break\n    }\n\n    if (o[lastName] != null && !Array.isArray(o[lastName])) {\n      o[lastName] = [o[lastName]]\n    }\n\n    if (Array.isArray(o[lastName])) {\n      o[lastName].push(message)\n    }\n    else {\n      o[lastName] = message\n    }\n  }\n  return result\n}\n\nconst DEFAULT_APP_DIR_NAMES = [\"app\", \"www\"]\n\n/** @internal */\nexport async function computeDefaultAppDirectory(projectDir: string, userAppDir: string | null | undefined): Promise<string> {\n  if (userAppDir != null) {\n    const absolutePath = path.resolve(projectDir, userAppDir)\n    const stat = await statOrNull(absolutePath)\n    if (stat == null) {\n      throw new Error(`Application directory ${userAppDir} doesn't exists`)\n    }\n    else if (!stat.isDirectory()) {\n      throw new Error(`Application directory ${userAppDir} is not a directory`)\n    }\n    else if (projectDir === absolutePath) {\n      warn(`Specified application directory \"${userAppDir}\" equals to project dir — superfluous or wrong configuration`)\n    }\n    return absolutePath\n  }\n\n  for (const dir of DEFAULT_APP_DIR_NAMES) {\n    const absolutePath = path.join(projectDir, dir)\n    const packageJson = path.join(absolutePath, \"package.json\")\n    const stat = await statOrNull(packageJson)\n    if (stat != null && stat.isFile()) {\n      return absolutePath\n    }\n  }\n  return projectDir\n}"]}
